{"ast":null,"code":"import { newInvariantError } from \"../../utilities/globals/index.js\";\nexport var serializeFetchParameter = function (p, label) {\n  var serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    var parseError = newInvariantError(39, label, e.message);\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};","map":{"version":3,"mappings":"AAAA,SAASA,iBAAiB,QAAQ,kCAAkC;AAOpE,OAAO,IAAMC,uBAAuB,GAAG,UAACC,CAAM,EAAEC,KAAa;EAC3D,IAAIC,UAAU;EACd,IAAI;IACFA,UAAU,GAAGC,IAAI,CAACC,SAAS,CAACJ,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOK,CAAM,EAAE;IACf,IAAMC,UAAU,GAAGR,iBAAiB,CAClC;IAIFQ,UAAU,CAACA,UAAU,GAAGD,CAAC;IACzB,MAAMC,UAAU;EAClB;EACA,OAAOJ,UAAU;AACnB,CAAC","names":["newInvariantError","serializeFetchParameter","p","label","serialized","JSON","stringify","e","parseError"],"sources":["/home/greg/projects/graphql/library-frontend/node_modules/@apollo/src/link/http/serializeFetchParameter.ts"],"sourcesContent":["import { newInvariantError } from \"../../utilities/globals/index.js\";\nimport type { InvariantError } from \"../../utilities/globals/index.js\";\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e: any) {\n    const parseError = newInvariantError(\n      `Network request failed. %s is not serializable: %s`,\n      label,\n      e.message\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}